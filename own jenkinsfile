pipeline {
    agent any
    
    tools {
        jdk 'jdk11'
        maven 'maven3'
    }
    
    environment {
        SCANNER_HOME = tool 'sonar-scanner'
    }
    
    stages {
        stage('Git Checkout') {
            steps {
                git branch: 'main', url: 'https://github.com/amanjhadbg77/Petclinic.git'
            }
        }
        
        stage('Compile') {
            steps {
               sh "mvn clean compile"
            }
        }
        
        stage('Test cases') {
            steps {
               sh "mvn test"
            }
        }
        
        stage('Sonarqube Analysis') {
            steps {
                withSonarQubeEnv('sonar-server') {
                     sh ''' $SCANNER_HOME/bin/sonar-scanner -Dsonar.projectName=Petclinic \
                     -Dsonar.java.binaries=. \
                     -Dsonar.projectKey=Petclinic '''
                }    
            }
            
        }
        
        stage('Build') {
            steps {
               sh "mvn clean package "
            }
        }
        stage('maven deplpy to nexus') {
            steps {
                configFileProvider([configFile(fileId: '53ba0752-efed-4359-9ba3-cd8add328396', variable: 'mavensettings')]) {
                  sh "mvn -s $mavensettings clean deploy -DskipTests=true"
                    
                }
                  
            }
        }
       
       stage('OWASP Dependency Check') {
            steps {
                dependencyCheck additionalArguments: '--scan target/', odcInstallation: 'owasp'
                dependencyCheckPublisher pattern: '**/dependency-check-report.xml'
            }
        }
       
        stage('Deploy') {
            steps {
                sh  'cp /var/lib/jenkins/workspace/build-sonar/target/petclinic.war /opt/apache-tomcat-9.0.97/webapps'
            }
        }
        
        
    }
}
